/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

/*
Modifications to urob defaults:
- Move ~ from LM0 LB0 to LT4 LM4
- Move | from RM3 RB3 to LM4 LB4
- Move / from RM2 RB2 to RB4, shift for ? as default
- Move = from LM1 LB1 to RT4 RM4
- Move ! from shift RB4 to RM4 RB4
- Move {} to RM0 RM1 and RM3 RM4, [] on shift (previously shift [], inverted since braces are more frequently used in c# coding)
- Move <> to RB1 RB2 and RB2 RB3, previously shift ()
- Add context menu to LM0 LB0
- Add macro != to RT2 RT3 RT4
*/

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

// make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_TAB    &hml         LS(LALT) TAB
#define HRC_REPEAT &hml_repeat  LS(LCTRL) 0
#define HRC_LPAR   &hmr_lpar_lt RS(LCTRL) 0
#define HRC_RPAR   &hmr_rpar_gt RS(LALT) 0


/* Horizontal combos - left hand */
ZMK_COMBO(esc,   &kp ESC,       LT3 LT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(ret,   &kp RETURN,    LT2 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(mouse, &smart_mouse,  LT3 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(tab,   HRC_TAB,       LM3 LM2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(repeat,HRC_REPEAT,    LM2 LM1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(cut,   &kp LC(X),     LB3 LB1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(copy,  &kp LC(INS),   LB3 LB2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(paste, &kp LS(INS),   LB2 LB1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)


/* Horizontal combos - right hand */
ZMK_COMBO(bspc,  &kp BSPC,      RT1 RT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(del,   &kp DEL,       RT2 RT3,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(equal, &kp EQUAL,     RT3 RT4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // Y+' = =
ZMK_COMBO(noteq, &noteq,        RT2 RT3 RT4, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) // != macro

ZMK_COMBO(lbrc,  &lbrc_bkt,     RM0 RM1,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) // { and [, inverse shift behavior
ZMK_COMBO(lpar,  HRC_LPAR,      RM1 RM2,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rpar,  HRC_RPAR,      RM2 RM3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &rbrc_bkt,     RM3 RM4,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) // } and ], inverse shift behavior

ZMK_COMBO(lt,    &kp LT,        RB1 RB2,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) // h+n = <
ZMK_COMBO(gt,    &kp GT,        RB2 RB3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) // i+o = >


/* Vertical combos - left hand */
ZMK_COMBO(tilde, &kp TILDE,     LT4 LM4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // Q+A = ~
ZMK_COMBO(at,    &kp AT,        LT3 LM3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,      LT2 LM2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,      LT1 LM1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,     LT0 LM0,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(pipe,  &kp PIPE,      LM4 LB4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // A+Z = |
ZMK_COMBO(grave, &kp GRAVE,     LM3 LB3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslh,  &kp BSLH,      LM2 LB2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(cmenu, &kp K_CMENU,   LM0 LB0,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // D+B = context menu


/* Vertical combos - right hand */
ZMK_COMBO(caret, &kp CARET,     RT0 RM0,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus,  &kp PLUS,      RT1 RM1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp STAR,      RT2 RM2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,  &kp AMPS,      RT3 RM3,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dqt,   &kp DQT,       RT4 RM4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // '+O = "

ZMK_COMBO(under, &kp UNDER,     RM0 RB0,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS,     RM1 RB1,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh,  &kp EXCL,      RM4 RB4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) // O+? = !


/* Norwegian letters, two handed combos except oe */
ZMK_COMBO(combo_da_ae,  &da_ae,    LM4 RM2,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(combo_da_oe,  &da_oe,    RM4 RM2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(combo_da_ao,  &da_aa,    LM4 RM4,     DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
